[package]
name = "hddfancontrol"
authors = ["desbma"]
description = "Daemon to regulate fan speed according to hard drive temperature on Linux"
readme = "README.md"
repository = "https://github.com/desbma/hddfancontrol"
keywords = ["hdd", "drive", "temperature", "fan", "control"]
categories = ["command-line-utilities"]
license = "GPL-3.0-only"
version = "2.0.5"
rust-version = "1.86"
edition = "2024"

[profile.release]
lto = true
codegen-units = 1

[dependencies]
anyhow = { version = "1.0.99", default-features = false, features = ["std", "backtrace"] }
backon = { version = "1.5.2", default-features = false, features = ["std", "std-blocking-sleep"] }
clap = { version = "4.5.45", default-features = false, features = ["std", "color", "help", "usage", "error-context", "suggestions", "derive"] }
clap-num = { version = "1.2.0", default-features = false }
clap_mangen = { version = "0.2.29", default-features = false, optional = true }
ctrlc = { version = "3.4.7", default-features = false, features = ["termination"] }
humantime = { version = "2.2.0", default-features = false }
itertools = { version = "0.14.0", default-features = false, features = ["use_std"] }
log = { version = "0.4.27", default-features = false, features = ["max_level_trace", "release_max_level_trace"] }
nix = { version = "0.30.1", default-features = false, features = ["fs"] }
simple_logger = { version = "5.0.0", default-features = false, features = ["colors", "stderr"] }
strum = { version = "0.27.2", default-features = false, features = ["std", "derive"] }
thiserror = { version = "2.0.16", default-features = false, features = ["std"] }
typed_floats = { version = "1.0.6", default-features = false, features = ["std", "compiler_hints", "ensure_no_undefined_behavior"] }

[dev-dependencies]
float-cmp = { version = "0.10.0", default-features = false, features = ["std"] }
serial_test = { version = "3.2.0", default-features = false }
tempfile = { version = "3.21.0", default-features = false }

[features]
default = []
gen-man-pages = ["dep:clap_mangen"]

[lints.rust]
# https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html
explicit_outlives_requirements = "warn"
missing_docs = "warn"
non_ascii_idents = "deny"
redundant-lifetimes = "warn"
single-use-lifetimes = "warn"
unit-bindings = "warn"
unreachable_pub = "warn"
unused_crate_dependencies = "warn"
unused-lifetimes = "warn"
unused-qualifications = "warn"

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
unnecessary_debug_formatting = "allow"
# below lints are from clippy::restriction, and assume clippy >= 1.86
# https://rust-lang.github.io/rust-clippy/master/index.html#/?levels=allow&groups=restriction
allow_attributes = "warn"
as_pointer_underscore = "warn"
clone_on_ref_ptr = "warn"
dbg_macro = "warn"
empty_enum_variants_with_brackets = "warn"
expect_used = "warn"
field_scoped_visibility_modifiers = "warn"
fn_to_numeric_cast_any = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
indexing_slicing = "warn"
infinite_loop = "warn"
lossy_float_literal = "warn"
map_with_unused_argument_over_ranges = "warn"
missing_docs_in_private_items = "warn"
mixed_read_write_in_expression = "warn"
module_name_repetitions = "warn"
multiple_inherent_impl = "warn"
mutex_integer = "warn"
needless_raw_strings = "warn"
non_zero_suggestions = "warn"
panic = "warn"
pathbuf_init_then_push = "warn"
precedence_bits = "warn"
pub_without_shorthand = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_and_then = "warn"
same_name_method = "warn"
self_named_module_files = "warn"
semicolon_inside_block = "warn"
shadow_unrelated = "warn"
str_to_string = "warn"
string_slice = "warn"
string_to_string = "warn"
tests_outside_test_module = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
unused_result_ok = "warn"
unused_trait_names = "warn"
unwrap_used = "warn"
verbose_file_reads = "warn"

[package.metadata.deb]
depends = "$auto, hdparm, smartmontools"
recommends = "sdparm"
maintainer-scripts = "debian/"
systemd-units = { enable = false, start = false, unit-scripts = "systemd/" }
assets = [
  ["target/release/hddfancontrol", "usr/bin/", "755"],
  ["systemd/hddfancontrol.conf", "etc/conf.d/hddfancontrol", "644"],
  ["target/man/*.1.gz", "usr/share/man/man1/", "644"]
]
